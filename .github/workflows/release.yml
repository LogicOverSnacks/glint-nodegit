name: Release

on:
  push:
    tags:
      - v*.*.*

jobs:
  electron:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-11, windows-latest]

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          node-version: 14.16.0
          check-latest: true
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Setup (linux)
        if: matrix.os == 'ubuntu-latest'
        # git >= 2.18 required for actions/checkout git support
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:git-core/ppa
          sudo apt-get update
          sudo apt-get install -y git build-essential clang python3 libssl-dev libkrb5-dev libc++-dev
          npm config set openssl_dir /usr/lib/ssl
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Setup (macos)
        if: matrix.os == 'macos-11'
        run: |
          npm config set openssl_dir /usr/local/opt/openssl@1.1

      - name: Setup (windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install visualstudio2017buildtools visualstudio2017-workload-vctools python2 openssl -y --no-progress
          npm config set msvs_version 2017
          npm config set python python2.7
          npm config set openssl_dir "C:\Program Files\OpenSSL-Win64"

      - name: Install
        env:
          CC: clang
          CXX: clang++
          npm_config_clang: 1
          GYP_DEFINES: use_obsolete_asm=true
        run: npm ci --arch=x64 --runtime=electron --target=12.0.7 --target_arch=x64 --disturl=https://electronjs.org/headers --build_from_source=true

      - name: Deploy
        env:
          NODE_PRE_GYP_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          npm install -g @mapbox/node-pre-gyp
          node lifecycleScripts/clean
          npx node-pre-gyp package --runtime=electron
          npx node-pre-gyp-github publish
          npm publish
