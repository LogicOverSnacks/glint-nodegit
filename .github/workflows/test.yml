name: Test

on:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install node
        uses: actions/setup-node@v4
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        with:
          node-version: 20.14.0
          check-latest: true
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Setup (linux)
        if: matrix.os == 'ubuntu-latest'
        # git >= 2.18 required for actions/checkout git support
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common git build-essential clang libssl-dev libkrb5-dev libc++-dev wget zlib1g-dev
          echo "npm_config_openssl_dir=/usr/lib/ssl" >> "$GITHUB_ENV"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Setup (macos)
        if: matrix.os == 'macos-latest'
        run: |
          echo "npm_config_openssl_dir=/usr/local/opt/openssl@1.1" >> "$GITHUB_ENV"

      - name: Setup (windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install openssl -y --no-progress
          echo "npm_config_openssl_dir=C:\Program Files\OpenSSL-Win64" >> "$GITHUB_ENV"

      - name: Setup for tests (linux, macos)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          set -e
          mkdir ~/.ssh_tests
          chmod 700 ~/.ssh_tests
          printf "%b" "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh_tests/config
          cat test/id_rsa.pub > ~/.ssh_tests/id_rsa.pub
          cat test/id_rsa.enc | base64 -d > ~/.ssh_tests/id_rsa
          chmod 600 ~/.ssh_tests/id_rsa*
          git config --global user.name "John Doe"
          git config --global user.email johndoe@example.com

      - name: Setup for tests (windows)
        if: matrix.os == 'windows-latest'
        run: |
          git config --file C:\ProgramData\Git\config core.autocrlf input
          git config --system core.autocrlf input
          git config --global core.autocrlf input
          git config --global user.name "John Doe"
          git config --global user.email johndoe@example.com

      - name: Install
        env:
          CC: clang
          CXX: clang++
          npm_config_clang: 1
          GYP_DEFINES: use_obsolete_asm=true
        run: npm ci

      - name: Test (linux, macos)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          set -e
          eval `ssh-agent -s`
          ssh-add ~/.ssh_tests/id_rsa
          node utils/retry npm test

      - name: Test (windows)
        if: matrix.os == 'windows-latest'
        env:
          GIT_SSH: ${{ github.workspace }}\vendor\plink.exe
        run: |
          powershell -command "Start-Process ${{ github.workspace }}\vendor\pageant.exe ${{ github.workspace }}\vendor\private.ppk"
          node utils/retry npm test
